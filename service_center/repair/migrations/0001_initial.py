# Generated by Django 4.1.7 on 2023-03-06 00:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text='Введите имя', max_length=25)),
                ('patronymic', models.CharField(max_length=25)),
                ('last_name', models.CharField(max_length=25)),
                ('email', models.CharField(blank=True, max_length=30)),
                ('phone', models.CharField(max_length=11)),
                ('address', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'clients',
                'unique_together': {('first_name', 'patronymic', 'last_name', 'phone')},
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=30)),
                ('serial_number', models.CharField(max_length=30)),
                ('kit_state', models.CharField(max_length=150)),
                ('defect', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'devices',
            },
        ),
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'device_types',
            },
        ),
        migrations.CreateModel(
            name='Repair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_visiting', models.BooleanField(default=False)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'repairs',
            },
        ),
        migrations.CreateModel(
            name='RepairStatus',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Repair Statuses',
                'db_table': 'repair_statuses',
            },
        ),
        migrations.CreateModel(
            name='RepairType',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'repair_types',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'vendors',
            },
        ),
        migrations.CreateModel(
            name='RepairOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accept_date', models.DateField(auto_now_add=True)),
                ('return_date', models.DateField(blank=True, null=True)),
                ('estimated_price', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('final_price', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repair.client')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repair.device')),
                ('repair', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='repair.repair')),
            ],
            options={
                'db_table': 'repair_orders',
            },
        ),
        migrations.AddField(
            model_name='repair',
            name='repair_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repair.repairtype'),
        ),
        migrations.AddField(
            model_name='repair',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repair.repairstatus'),
        ),
        migrations.CreateModel(
            name='EmployeeComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
                ('comment', models.CharField(max_length=100)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('repair_order', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='repair.repairorder')),
            ],
            options={
                'db_table': 'employee_comments',
            },
        ),
        migrations.AddField(
            model_name='device',
            name='device_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repair.devicetype'),
        ),
        migrations.AddField(
            model_name='device',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='repair.vendor'),
        ),
        migrations.AlterUniqueTogether(
            name='device',
            unique_together={('model', 'serial_number')},
        ),
    ]
